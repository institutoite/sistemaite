que se pueda marcar despues de la clase trabajar en programacion pasada o vencida
mostrar las clases de programadas para hoy 
cuando se paga el total de la modalidad enviar a la vista de programacionPrincipal
Finalizar una clases presente en computacion  
registro rapido de posibles clientes 
que sea nullable los campos de personas fechaNacimiento carnet direccion y expedido papel colocar por defecto estudiante 
boton imprimir pdf formulario para registro rapido
cuando se guarda rapidingo el telefono del apoderado no se muestra corretamente en los Telefonos
calificar al estudiante cuando termine la inscripcion calificable
programar subir archivos documentos digitales
que todos los mostrar tengan quien hizo el registro correpondiente
validar intereses al crear personas
en presentes aumentar guarderia, robotica  
no se ve el boton siguiente o guardar cuando se toma foto con camara
agregar boton compartir Credenciales de usuario de cliente
cuando verificar el pago con Bs. 200 y cambio Bs. 25 en computacion y Matematicas

que se cambien de campo cuando se presiona enter en todos los formularios validar los formularios antes de guardar o actualizar 
cuando le demos finalizar una clases que guarde la hora que se fue 
verificar las licencias que se muestran cuando se esta mostrando una programacion parece que es lo mismo de Mate= COmputacion 
validar actuzalidar un motivo sale que ya existe
hacer una seccion de contactanos donde este las formas de contactanos
Falta terminar el crud de requisitos y metas
En registrar facilito que tenga dos pestañas arriba uno para registrar sin apoderado y otro con apoderado
editar Inscripción
editar Matriculaciones
a Todos los seeder Nivel::findOrFail(1)->userable()->create(['user_id'=>1]);
agragar chat por mesenger a las paginas 
Ver las carteras
que en detalle de pagos se muestre el total
cuando computacion se paga todo la ultima clase se queda impaga
a la hora de marcar clase que se muestre la programacion real  







en el controlador
use Illuminate\Support\Facades\Auth;
use App\Models\User;


en mostrar
$user=User::findOrFail($asignatura->userable->user_id);
y su compact


en el guardar 
$persona->userable()->create(['user_id'=>Auth::user()->id]);



en lavista
<tr>
    <td>Usuario</td>
    <td>
        {{$user->name}}
        <img  src="{{URL::to('/').Storage::url("$user->foto")}}" alt="{{$user->name}}" class="rounded img-thumbnail img-fluid border-primary border-5"> 
    </td>
</tr>


para observaciones en el index
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>

    <script src="https://cdn.ckeditor.com/4.19.0/standard-all/ckeditor.js"></script>
    <script src="{{asset('assets/js/observacion.js')}}"></script>
codigo javascript
( function ( $ ) {
    'use strict';
    $.fn.addTempClass = function ( className, expire, callback ) {
        className || ( className = '' );
        expire || ( expire = 2000 );
        return this.each( function () {
            $( this ).addClass( className ).delay( expire ).queue( function () {
                $( this ).removeClass( className ).clearQueue();
                callback && callback();
            } );
        } );
    };
} ( jQuery ) );


en html
@include('observacion.modalcreate')


en el action 
<a href="" class="btn-accion-tabla tooltipsC btn-sm mr-2 observacion" id="Persona" title="Agregar Observacion">
    <i class="fas fa-comment-alt fa-2x"></i>
</a>

el datatable 
"createdRow": function( row, data, dataIndex ) {
    $(row).attr('id',data['id']); // agrega dinamiacamente el id del row
},
